image: docker:latest

variables:
  POSTGRES_DB: placeholder
  POSTGRES_USER: pragun
  POSTGRES_PASSWORD: $POSTGRES_PASSWORD
  POSTGRES_HOST_AUTH_METHOD: trust
  DOCKER_USER: $DOCK_USER
  DOCKER_PASS: $DOCK_PASS

services:
  - postgres:latest
  - redis:latest
  - docker:dind

stages:
  - test
  - build
  - deploy

tests:
  stage: test

  cache:
    paths:
      - node_modules/**/*

  before_script:
    - apt update
    - apt install -y curl tar zstd wget postgresql-client
    - mkdir loaddb
    - cd loaddb
    - curl -L --output vndb.tar.zst https://dl.vndb.org/dump/vndb-db-latest.tar.zst
    - tar -I zstd -xvf vndb.tar.zst > /dev/null
    - ls
    - export PGPASSWORD=$POSTGRES_PASSWORD
    - psql --version
    - psql -h postgres -U $POSTGRES_USER -d $POSTGRES_DB -c "SELECT VERSION();"
    - psql -h postgres -U $POSTGRES_USER -d $POSTGRES_DB -c "CREATE DATABASE vndb;"
    - psql -h postgres -U $POSTGRES_USER -d $POSTGRES_DB -c "CREATE DATABASE vndb_backup"
    - psql -h postgres -U $POSTGRES_USER vndb < import.sql > /dev/null
    - psql -h postgres -U $POSTGRES_USER vndb_backup < import.sql > /dev/null
    - cd ..
    - rm -rf loaddb
    - ls
    # NOW SET SERVER ENV VARIABLES
    - export PGHOST=postgres
    - export PGUSER=$POSTGRES_USER
    - export PGPASSWORD=$POSTGRES_PASSWORD
    - export PGDATABASE=vndb
    - export PGBACKUPDATABASE=vndb_backup
    - export PGPORT=5432
    - export REDISHOST=redis
    - export REDISPORT=6379

  script:
    - npm install
    - npm test

build:
  stage: build

  before_script:
    - docker version

  script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
    - docker build -t index.docker.io/$DOCK_USER/vndb-backend .
    - docker push index.docker.io/$DOCK_USER/vndb-backend

deploy:
  stage: deploy

  before_script:
    - apt update
    - apt install -y python
    - pip install -U pip
    - pip install awscli

  script:
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws ssm describe-instance-information --instance-information-filter-list key=InstanceIds,valueSet=i-0a690fb050c0e8ab1
